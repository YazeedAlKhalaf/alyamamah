// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.3
// source: proto/feedback_svc.proto

package feedbacksvcpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SvcFeedbackCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	NameAr string `protobuf:"bytes,2,opt,name=name_ar,json=nameAr,proto3" json:"name_ar,omitempty"`
	NameEn string `protobuf:"bytes,3,opt,name=name_en,json=nameEn,proto3" json:"name_en,omitempty"`
}

func (x *SvcFeedbackCategory) Reset() {
	*x = SvcFeedbackCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_feedback_svc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SvcFeedbackCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SvcFeedbackCategory) ProtoMessage() {}

func (x *SvcFeedbackCategory) ProtoReflect() protoreflect.Message {
	mi := &file_proto_feedback_svc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SvcFeedbackCategory.ProtoReflect.Descriptor instead.
func (*SvcFeedbackCategory) Descriptor() ([]byte, []int) {
	return file_proto_feedback_svc_proto_rawDescGZIP(), []int{0}
}

func (x *SvcFeedbackCategory) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SvcFeedbackCategory) GetNameAr() string {
	if x != nil {
		return x.NameAr
	}
	return ""
}

func (x *SvcFeedbackCategory) GetNameEn() string {
	if x != nil {
		return x.NameEn
	}
	return ""
}

type SvcFeedbackItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title     string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Body      string                 `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	Category  *SvcFeedbackCategory   `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	UserId    string                 `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *SvcFeedbackItem) Reset() {
	*x = SvcFeedbackItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_feedback_svc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SvcFeedbackItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SvcFeedbackItem) ProtoMessage() {}

func (x *SvcFeedbackItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_feedback_svc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SvcFeedbackItem.ProtoReflect.Descriptor instead.
func (*SvcFeedbackItem) Descriptor() ([]byte, []int) {
	return file_proto_feedback_svc_proto_rawDescGZIP(), []int{1}
}

func (x *SvcFeedbackItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SvcFeedbackItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SvcFeedbackItem) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *SvcFeedbackItem) GetCategory() *SvcFeedbackCategory {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *SvcFeedbackItem) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SvcFeedbackItem) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type SvcCreateFeedbackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId                 string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title                  string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Body                   string `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	CategoryId             string `protobuf:"bytes,4,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	StudentId              string `protobuf:"bytes,5,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	StudentName            string `protobuf:"bytes,6,opt,name=student_name,json=studentName,proto3" json:"student_name,omitempty"`
	StudentEmail           string `protobuf:"bytes,7,opt,name=student_email,json=studentEmail,proto3" json:"student_email,omitempty"`
	StudentPhone           string `protobuf:"bytes,8,opt,name=student_phone,json=studentPhone,proto3" json:"student_phone,omitempty"`
	StudentMajor           string `protobuf:"bytes,9,opt,name=student_major,json=studentMajor,proto3" json:"student_major,omitempty"`
	StudentJoinSemester    string `protobuf:"bytes,10,opt,name=student_join_semester,json=studentJoinSemester,proto3" json:"student_join_semester,omitempty"`
	StudentCurrentSemester string `protobuf:"bytes,11,opt,name=student_current_semester,json=studentCurrentSemester,proto3" json:"student_current_semester,omitempty"`
	StudentGender          string `protobuf:"bytes,12,opt,name=student_gender,json=studentGender,proto3" json:"student_gender,omitempty"`
	StudentRemainingHours  int32  `protobuf:"varint,13,opt,name=student_remaining_hours,json=studentRemainingHours,proto3" json:"student_remaining_hours,omitempty"`
	StudentTakenHours      int32  `protobuf:"varint,14,opt,name=student_taken_hours,json=studentTakenHours,proto3" json:"student_taken_hours,omitempty"`
	StudentTotalHours      int32  `protobuf:"varint,15,opt,name=student_total_hours,json=studentTotalHours,proto3" json:"student_total_hours,omitempty"`
}

func (x *SvcCreateFeedbackRequest) Reset() {
	*x = SvcCreateFeedbackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_feedback_svc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SvcCreateFeedbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SvcCreateFeedbackRequest) ProtoMessage() {}

func (x *SvcCreateFeedbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_feedback_svc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SvcCreateFeedbackRequest.ProtoReflect.Descriptor instead.
func (*SvcCreateFeedbackRequest) Descriptor() ([]byte, []int) {
	return file_proto_feedback_svc_proto_rawDescGZIP(), []int{2}
}

func (x *SvcCreateFeedbackRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SvcCreateFeedbackRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SvcCreateFeedbackRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *SvcCreateFeedbackRequest) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *SvcCreateFeedbackRequest) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *SvcCreateFeedbackRequest) GetStudentName() string {
	if x != nil {
		return x.StudentName
	}
	return ""
}

func (x *SvcCreateFeedbackRequest) GetStudentEmail() string {
	if x != nil {
		return x.StudentEmail
	}
	return ""
}

func (x *SvcCreateFeedbackRequest) GetStudentPhone() string {
	if x != nil {
		return x.StudentPhone
	}
	return ""
}

func (x *SvcCreateFeedbackRequest) GetStudentMajor() string {
	if x != nil {
		return x.StudentMajor
	}
	return ""
}

func (x *SvcCreateFeedbackRequest) GetStudentJoinSemester() string {
	if x != nil {
		return x.StudentJoinSemester
	}
	return ""
}

func (x *SvcCreateFeedbackRequest) GetStudentCurrentSemester() string {
	if x != nil {
		return x.StudentCurrentSemester
	}
	return ""
}

func (x *SvcCreateFeedbackRequest) GetStudentGender() string {
	if x != nil {
		return x.StudentGender
	}
	return ""
}

func (x *SvcCreateFeedbackRequest) GetStudentRemainingHours() int32 {
	if x != nil {
		return x.StudentRemainingHours
	}
	return 0
}

func (x *SvcCreateFeedbackRequest) GetStudentTakenHours() int32 {
	if x != nil {
		return x.StudentTakenHours
	}
	return 0
}

func (x *SvcCreateFeedbackRequest) GetStudentTotalHours() int32 {
	if x != nil {
		return x.StudentTotalHours
	}
	return 0
}

type SvcCreateFeedbackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SvcCreateFeedbackResponse) Reset() {
	*x = SvcCreateFeedbackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_feedback_svc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SvcCreateFeedbackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SvcCreateFeedbackResponse) ProtoMessage() {}

func (x *SvcCreateFeedbackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_feedback_svc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SvcCreateFeedbackResponse.ProtoReflect.Descriptor instead.
func (*SvcCreateFeedbackResponse) Descriptor() ([]byte, []int) {
	return file_proto_feedback_svc_proto_rawDescGZIP(), []int{3}
}

type SvcGetFeedbackByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SvcGetFeedbackByIdRequest) Reset() {
	*x = SvcGetFeedbackByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_feedback_svc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SvcGetFeedbackByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SvcGetFeedbackByIdRequest) ProtoMessage() {}

func (x *SvcGetFeedbackByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_feedback_svc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SvcGetFeedbackByIdRequest.ProtoReflect.Descriptor instead.
func (*SvcGetFeedbackByIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_feedback_svc_proto_rawDescGZIP(), []int{4}
}

func (x *SvcGetFeedbackByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type SvcGetFeedbackByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedbackItem *SvcFeedbackItem `protobuf:"bytes,1,opt,name=feedback_item,json=feedbackItem,proto3" json:"feedback_item,omitempty"`
}

func (x *SvcGetFeedbackByIdResponse) Reset() {
	*x = SvcGetFeedbackByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_feedback_svc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SvcGetFeedbackByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SvcGetFeedbackByIdResponse) ProtoMessage() {}

func (x *SvcGetFeedbackByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_feedback_svc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SvcGetFeedbackByIdResponse.ProtoReflect.Descriptor instead.
func (*SvcGetFeedbackByIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_feedback_svc_proto_rawDescGZIP(), []int{5}
}

func (x *SvcGetFeedbackByIdResponse) GetFeedbackItem() *SvcFeedbackItem {
	if x != nil {
		return x.FeedbackItem
	}
	return nil
}

type SvcGetFeedbackByUserIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *SvcGetFeedbackByUserIdRequest) Reset() {
	*x = SvcGetFeedbackByUserIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_feedback_svc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SvcGetFeedbackByUserIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SvcGetFeedbackByUserIdRequest) ProtoMessage() {}

func (x *SvcGetFeedbackByUserIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_feedback_svc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SvcGetFeedbackByUserIdRequest.ProtoReflect.Descriptor instead.
func (*SvcGetFeedbackByUserIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_feedback_svc_proto_rawDescGZIP(), []int{6}
}

func (x *SvcGetFeedbackByUserIdRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type SvcGetFeedbackByUserIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedbackItems []*SvcFeedbackItem `protobuf:"bytes,1,rep,name=feedback_items,json=feedbackItems,proto3" json:"feedback_items,omitempty"`
}

func (x *SvcGetFeedbackByUserIdResponse) Reset() {
	*x = SvcGetFeedbackByUserIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_feedback_svc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SvcGetFeedbackByUserIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SvcGetFeedbackByUserIdResponse) ProtoMessage() {}

func (x *SvcGetFeedbackByUserIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_feedback_svc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SvcGetFeedbackByUserIdResponse.ProtoReflect.Descriptor instead.
func (*SvcGetFeedbackByUserIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_feedback_svc_proto_rawDescGZIP(), []int{7}
}

func (x *SvcGetFeedbackByUserIdResponse) GetFeedbackItems() []*SvcFeedbackItem {
	if x != nil {
		return x.FeedbackItems
	}
	return nil
}

type SvcGetFeedbackCategoriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SvcGetFeedbackCategoriesRequest) Reset() {
	*x = SvcGetFeedbackCategoriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_feedback_svc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SvcGetFeedbackCategoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SvcGetFeedbackCategoriesRequest) ProtoMessage() {}

func (x *SvcGetFeedbackCategoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_feedback_svc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SvcGetFeedbackCategoriesRequest.ProtoReflect.Descriptor instead.
func (*SvcGetFeedbackCategoriesRequest) Descriptor() ([]byte, []int) {
	return file_proto_feedback_svc_proto_rawDescGZIP(), []int{8}
}

type SvcGetFeedbackCategoriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Categories []*SvcFeedbackCategory `protobuf:"bytes,1,rep,name=categories,proto3" json:"categories,omitempty"`
}

func (x *SvcGetFeedbackCategoriesResponse) Reset() {
	*x = SvcGetFeedbackCategoriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_feedback_svc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SvcGetFeedbackCategoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SvcGetFeedbackCategoriesResponse) ProtoMessage() {}

func (x *SvcGetFeedbackCategoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_feedback_svc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SvcGetFeedbackCategoriesResponse.ProtoReflect.Descriptor instead.
func (*SvcGetFeedbackCategoriesResponse) Descriptor() ([]byte, []int) {
	return file_proto_feedback_svc_proto_rawDescGZIP(), []int{9}
}

func (x *SvcGetFeedbackCategoriesResponse) GetCategories() []*SvcFeedbackCategory {
	if x != nil {
		return x.Categories
	}
	return nil
}

var File_proto_feedback_svc_proto protoreflect.FileDescriptor

var file_proto_feedback_svc_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x5f, 0x73, 0x76, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x57, 0x0a, 0x13, 0x53,
	0x76, 0x63, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x41, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x6e,
	0x61, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x61,
	0x6d, 0x65, 0x45, 0x6e, 0x22, 0xd1, 0x01, 0x0a, 0x0f, 0x53, 0x76, 0x63, 0x46, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x76, 0x63, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xdc, 0x04, 0x0a, 0x18, 0x53, 0x76, 0x63,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x5f, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x38,
	0x0a, 0x18, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x16, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x5f, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x36, 0x0a, 0x17, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x15, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x61, 0x6b, 0x65, 0x6e, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x6b,
	0x65, 0x6e, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x22, 0x1b, 0x0a, 0x19, 0x53, 0x76, 0x63, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x0a, 0x19, 0x53, 0x76, 0x63, 0x47, 0x65, 0x74, 0x46, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x53, 0x0a, 0x1a, 0x53, 0x76, 0x63, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x35, 0x0a, 0x0d, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x53, 0x76, 0x63, 0x46, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x38, 0x0a, 0x1d, 0x53, 0x76, 0x63, 0x47, 0x65, 0x74,
	0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x59, 0x0a, 0x1e, 0x53, 0x76, 0x63, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x37, 0x0a, 0x0e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x53, 0x76, 0x63,
	0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0d, 0x66, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x21, 0x0a, 0x1f, 0x53,
	0x76, 0x63, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x58,
	0x0a, 0x20, 0x53, 0x76, 0x63, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x76, 0x63, 0x46, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0a, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x32, 0xe4, 0x02, 0x0a, 0x0b, 0x46, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x76, 0x63, 0x12, 0x4a, 0x0a, 0x11, 0x53, 0x76, 0x63, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x19, 0x2e,
	0x53, 0x76, 0x63, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x53, 0x76, 0x63, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x12, 0x53, 0x76, 0x63, 0x47, 0x65, 0x74, 0x46, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x2e, 0x53, 0x76, 0x63,
	0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x53, 0x76, 0x63, 0x47, 0x65, 0x74, 0x46,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x16, 0x53, 0x76, 0x63, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x2e,
	0x53, 0x76, 0x63, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x42, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x53, 0x76, 0x63, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x42, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f,
	0x0a, 0x18, 0x53, 0x76, 0x63, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x20, 0x2e, 0x53, 0x76, 0x63,
	0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x53,
	0x76, 0x63, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x47, 0x5a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x59, 0x61,
	0x7a, 0x65, 0x65, 0x64, 0x41, 0x6c, 0x4b, 0x68, 0x61, 0x6c, 0x61, 0x66, 0x2f, 0x61, 0x6c, 0x79,
	0x61, 0x6d, 0x61, 0x6d, 0x61, 0x68, 0x2f, 0x71, 0x75, 0x61, 0x73, 0x61, 0x72, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x3b, 0x66, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x73, 0x76, 0x63, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_feedback_svc_proto_rawDescOnce sync.Once
	file_proto_feedback_svc_proto_rawDescData = file_proto_feedback_svc_proto_rawDesc
)

func file_proto_feedback_svc_proto_rawDescGZIP() []byte {
	file_proto_feedback_svc_proto_rawDescOnce.Do(func() {
		file_proto_feedback_svc_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_feedback_svc_proto_rawDescData)
	})
	return file_proto_feedback_svc_proto_rawDescData
}

var file_proto_feedback_svc_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_feedback_svc_proto_goTypes = []interface{}{
	(*SvcFeedbackCategory)(nil),              // 0: SvcFeedbackCategory
	(*SvcFeedbackItem)(nil),                  // 1: SvcFeedbackItem
	(*SvcCreateFeedbackRequest)(nil),         // 2: SvcCreateFeedbackRequest
	(*SvcCreateFeedbackResponse)(nil),        // 3: SvcCreateFeedbackResponse
	(*SvcGetFeedbackByIdRequest)(nil),        // 4: SvcGetFeedbackByIdRequest
	(*SvcGetFeedbackByIdResponse)(nil),       // 5: SvcGetFeedbackByIdResponse
	(*SvcGetFeedbackByUserIdRequest)(nil),    // 6: SvcGetFeedbackByUserIdRequest
	(*SvcGetFeedbackByUserIdResponse)(nil),   // 7: SvcGetFeedbackByUserIdResponse
	(*SvcGetFeedbackCategoriesRequest)(nil),  // 8: SvcGetFeedbackCategoriesRequest
	(*SvcGetFeedbackCategoriesResponse)(nil), // 9: SvcGetFeedbackCategoriesResponse
	(*timestamppb.Timestamp)(nil),            // 10: google.protobuf.Timestamp
}
var file_proto_feedback_svc_proto_depIdxs = []int32{
	0,  // 0: SvcFeedbackItem.category:type_name -> SvcFeedbackCategory
	10, // 1: SvcFeedbackItem.created_at:type_name -> google.protobuf.Timestamp
	1,  // 2: SvcGetFeedbackByIdResponse.feedback_item:type_name -> SvcFeedbackItem
	1,  // 3: SvcGetFeedbackByUserIdResponse.feedback_items:type_name -> SvcFeedbackItem
	0,  // 4: SvcGetFeedbackCategoriesResponse.categories:type_name -> SvcFeedbackCategory
	2,  // 5: FeedbackSvc.SvcCreateFeedback:input_type -> SvcCreateFeedbackRequest
	4,  // 6: FeedbackSvc.SvcGetFeedbackById:input_type -> SvcGetFeedbackByIdRequest
	6,  // 7: FeedbackSvc.SvcGetFeedbackByUserId:input_type -> SvcGetFeedbackByUserIdRequest
	8,  // 8: FeedbackSvc.SvcGetFeedbackCategories:input_type -> SvcGetFeedbackCategoriesRequest
	3,  // 9: FeedbackSvc.SvcCreateFeedback:output_type -> SvcCreateFeedbackResponse
	5,  // 10: FeedbackSvc.SvcGetFeedbackById:output_type -> SvcGetFeedbackByIdResponse
	7,  // 11: FeedbackSvc.SvcGetFeedbackByUserId:output_type -> SvcGetFeedbackByUserIdResponse
	9,  // 12: FeedbackSvc.SvcGetFeedbackCategories:output_type -> SvcGetFeedbackCategoriesResponse
	9,  // [9:13] is the sub-list for method output_type
	5,  // [5:9] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_proto_feedback_svc_proto_init() }
func file_proto_feedback_svc_proto_init() {
	if File_proto_feedback_svc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_feedback_svc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SvcFeedbackCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_feedback_svc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SvcFeedbackItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_feedback_svc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SvcCreateFeedbackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_feedback_svc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SvcCreateFeedbackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_feedback_svc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SvcGetFeedbackByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_feedback_svc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SvcGetFeedbackByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_feedback_svc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SvcGetFeedbackByUserIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_feedback_svc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SvcGetFeedbackByUserIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_feedback_svc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SvcGetFeedbackCategoriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_feedback_svc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SvcGetFeedbackCategoriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_feedback_svc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_feedback_svc_proto_goTypes,
		DependencyIndexes: file_proto_feedback_svc_proto_depIdxs,
		MessageInfos:      file_proto_feedback_svc_proto_msgTypes,
	}.Build()
	File_proto_feedback_svc_proto = out.File
	file_proto_feedback_svc_proto_rawDesc = nil
	file_proto_feedback_svc_proto_goTypes = nil
	file_proto_feedback_svc_proto_depIdxs = nil
}
